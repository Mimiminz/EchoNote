version: '3'
services:
  echonote-mysql:
    container_name: echonote-mysql
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=echonote
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mydata:/var/lib/mysql
    restart: always
  echonote-mongo:
    image: mongo
    container_name: echonote-mongo
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    restart: always
  echonote-redis:
    container_name: echonote-redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}  # 비밀번호를 환경 변수로 설정
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis-data:/data
  echonote-backend:
    container_name: echonote-backend
    build: ./echonote_backend
    image: echonote-backend
    ports:
      - "8081:8080"
    depends_on:
      - echonote-mysql
      - echonote-mongo
    environment:
      - SPRING_DATASOURCE_URL=${RDS_URL}
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@echonote-mongo:27017/${MONGO_DATABASE}
    restart: on-failure

#  echonote-frontend:
#    container_name: echonote-frontend
#    build: ./frontend
#    image: echonote-frontend
#    depends_on:
#      - echonote-backend
#    ports:
#      - '80:80'
#    restart: on-failure

volumes:
  mydata:
  mongodb-data:
  redis-data:
